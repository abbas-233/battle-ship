(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],A=0;A<n.length;A++){var l=n[A],s=r.base?l[0]+r.base:l[0],c=o[s]||0,d="".concat(s," ").concat(c);o[s]=c+1;var p=t(d),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var g=a(u,r);r.byIndex=A,e.splice(A,0,{identifier:d,updater:g,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var A=t(o[i]);e[A].references--}for(var l=r(n,a),s=0;s<o.length;s++){var c=t(o[s]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=l}}},109:(n,e,t)=>{n.exports=t.p+"99d77679f48bbd6d26f3.jpg"},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var l=this[A][0];null!=l&&(i[l]=!0)}for(var s=0;s<n.length;s++){var c=[].concat(n[s]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},320:(n,e,t)=>{n.exports=t.p+"053ed03e3887d08ffa92.png"},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},383:(n,e,t)=>{n.exports=t.p+"b1905810eecca0e0b105.png"},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},971:(n,e,t)=>{t.d(e,{A:()=>C});var r=t(354),a=t.n(r),o=t(314),i=t.n(o),A=t(417),l=t.n(A),s=new URL(t(109),t.b),c=new URL(t(320),t.b),d=new URL(t(383),t.b),p=i()(a()),u=l()(s),g=l()(c),b=l()(d);p.push([n.id,`/* Modern Elegant Battleship Theme */\n/* ---------------------- Reset ---------------------- */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* ---------------------- Base Styles ---------------------- */\nbody {\n  font-family: 'Inter', 'Roboto', sans-serif;\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.85)), \n              url(${u}) center/cover no-repeat fixed;\n  color: #e0e0e0;\n  padding: 40px 20px;\n  min-height: 100vh;\n}\n\n/* ---------------------- Headings ---------------------- */\nh1 {\n  font-family: 'Orbitron', sans-serif;\n  text-align: center;\n  font-size: 3em;\n  color: #fff;\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.4);\n  margin-bottom: 30px;\n  letter-spacing: 3px;\n}\n\nh2 {\n  font-family: 'Orbitron', sans-serif;\n  font-size: 1.8em;\n  color: #fff;\n  text-shadow: 0 0 8px rgba(255, 255, 255, 0.4);\n  margin-bottom: 20px;\n  text-align: center;\n  letter-spacing: 2px;\n}\n\nh3 {\n  font-family: 'Orbitron', sans-serif;\n  font-size: 1.3em;\n  color: #fff;\n  text-shadow: 0 0 6px rgba(255, 255, 255, 0.3);\n  margin-bottom: 15px;\n  text-align: center;\n  width: 100%;\n  letter-spacing: 1px;\n}\n\n#message-area {\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 1.2em;\n  color: #fff;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(5px);\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n/* ---------------------- Glass Panels & Containers ---------------------- */\n.glass-panel {\n  background: rgba(255, 255, 255, 0.12);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.18);\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  border-radius: 24px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  padding: 32px 40px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  margin: 0 auto 32px auto;\n  max-width: 700px;\n}\n\n#controls-container {\n  display: flex;\n  justify-content: center;\n  gap: 40px;\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n}\n\n#placement-controls {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n#placement-controls button {\n  margin-bottom: 25px;\n}\n\n#placement-controls button:last-child {\n  margin-bottom: 0;\n}\n\n#top-panel-row {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 8px;\n  margin-bottom: 40px;\n  flex-wrap: wrap;\n}\n\n/* ---------------------- Modern Icon Buttons ---------------------- */\n.icon-btn,\nbutton,\n#sound-toggle,\n#reset-button,\n#placement-controls button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 14px;\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  border: none;\n  border-radius: 16px;\n  padding: 14px 28px;\n  font-size: 1.1em;\n  font-weight: 500;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  min-width: 180px;\n}\n\n.icon-btn:hover,\nbutton:hover,\n#sound-toggle:hover,\n#reset-button:hover,\n#placement-controls button:hover {\n  background: rgba(255, 255, 255, 0.2);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n  transform: translateY(-3px);\n}\n\n.icon-btn:active,\nbutton:active,\n#sound-toggle:active,\n#reset-button:active,\n#placement-controls button:active {\n  transform: translateY(1px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btn-icon {\n  width: 24px;\n  height: 24px;\n  border-radius: 6px;\n  object-fit: cover;\n}\n\n#sound-toggle {\n  background: rgba(0, 255, 255, 0.1);\n  border: 1px solid rgba(0, 255, 255, 0.3);\n}\n\n#sound-toggle:hover {\n  background: rgba(0, 255, 255, 0.2);\n}\n\n#reset-button {\n  background: rgba(255, 0, 85, 0.1);\n  border: 1px solid rgba(255, 0, 85, 0.3);\n}\n\n#reset-button:hover {\n  background: rgba(255, 0, 85, 0.2);\n}\n\n/* ---------------------- Game Layout ---------------------- */\n#game-container {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 40px;\n  padding: 40px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 24px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.08);\n  padding: 24px;\n  border-radius: 20px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.board-container:hover {\n  box-shadow: 0 12px 36px rgba(0, 0, 0, 0.25);\n  transform: translateY(-5px);\n}\n\n/* ---------------------- Game Board & Cells ---------------------- */\n.game-board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  width: 400px;\n  height: 400px;\n  gap: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  padding: 8px;\n  border-radius: 12px;\n  box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.4);\n}\n\n.cell {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.enemy-cell:hover {\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 0 15px rgba(255, 255, 255, 0.2);\n  transform: scale(1.05);\n  z-index: 1;\n}\n\n.cell.ship {\n  background: rgba(0, 255, 255, 0.1);\n  border-color: rgba(0, 255, 255, 0.3);\n  box-shadow: 0 0 8px rgba(0, 255, 255, 0.2);\n}\n\n.cell.miss {\n  background: rgba(255, 165, 0, 0.1);\n  border-color: rgba(255, 165, 0, 0.3);\n}\n\n.cell.miss::after {\n  content: '';\n  position: absolute;\n  width: 60%;\n  height: 60%;\n  background: url(${g}) center/contain no-repeat;\n  top: 50%; left: 50%; transform: translate(-50%, -50%);\n  filter: drop-shadow(0 0 5px rgba(255, 165, 0, 0.5));\n}\n\n.cell.hit {\n  background: rgba(255, 0, 85, 0.15);\n  border-color: rgba(255, 0, 85, 0.4);\n  box-shadow: 0 0 12px rgba(255, 0, 85, 0.3);\n}\n\n.cell.hit::after {\n  content: '';\n  position: absolute;\n  width: 70%;\n  height: 70%;\n  background: url(${b}) center/contain no-repeat;\n  top: 50%; left: 50%; transform: translate(-50%, -50%);\n  filter: drop-shadow(0 0 8px rgba(255, 0, 85, 0.5));\n}\n\n#computer-board .cell.ship {\n  background: rgba(255, 255, 255, 0.05);\n  border-color: rgba(255, 255, 255, 0.1);\n  box-shadow: none;\n}\n\n/* ---------------------- Placement Effects ---------------------- */\n.placement-phase #player-board .cell.hover-valid {\n  background: rgba(0, 255, 0, 0.2);\n  box-shadow: 0 0 12px rgba(0, 255, 0, 0.4);\n}\n\n.placement-phase #player-board .cell.hover-invalid {\n  background: rgba(255, 0, 0, 0.2);\n  box-shadow: 0 0 12px rgba(255, 0, 0, 0.4);\n}\n\n/* ---------------------- Ship Selection ---------------------- */\n#ship-list-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  background: rgba(255, 255, 255, 0.05);\n  padding: 24px;\n  border-radius: 20px;\n  margin-bottom: 30px;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n}\n\n#ship-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n  gap: 20px;\n  justify-items: center;\n  align-items: center;\n  width: 100%;\n  max-width: 900px;\n  margin: 0 auto;\n}\n\n#ship-list li {\n  background: rgba(255, 255, 255, 0.08);\n  padding: 16px 24px;\n  border-radius: 16px;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  font-size: 1.1em;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  width: 100%;\n  justify-content: center;\n}\n\n#ship-list li:hover {\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\n  transform: translateY(-3px);\n}\n\n#ship-list li.selected {\n  background: rgba(255, 0, 85, 0.15);\n  box-shadow: 0 8px 24px rgba(255, 0, 85, 0.2);\n  border: 1px solid rgba(255, 0, 85, 0.3);\n}\n\n#ship-list li img {\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  object-fit: cover;\n}\n\n/* Responsive adjustments */\n@media (max-width: 600px) {\n  body {\n    padding: 20px 10px;\n  }\n  \n  #controls-container {\n    flex-direction: column;\n    gap: 20px;\n  }\n  \n  #placement-controls {\n    flex-direction: column;\n    gap: 12px;\n  }\n  \n  .game-board {\n    width: 320px;\n    height: 320px;\n  }\n  \n  #game-container {\n    padding: 20px;\n  }\n}\n\n@media (max-width: 900px) {\n  #top-panel-row {\n    flex-direction: column;\n    gap: 24px;\n    align-items: center;\n  }\n} `,"",{version:3,sources:["webpack://./public/style.css"],names:[],mappings:"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",sourcesContent:["/* Modern Elegant Battleship Theme */\n/* ---------------------- Reset ---------------------- */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n/* ---------------------- Base Styles ---------------------- */\nbody {\n  font-family: 'Inter', 'Roboto', sans-serif;\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.85)), \n              url('/assets/images/ocean-360.jpg') center/cover no-repeat fixed;\n  color: #e0e0e0;\n  padding: 40px 20px;\n  min-height: 100vh;\n}\n\n/* ---------------------- Headings ---------------------- */\nh1 {\n  font-family: 'Orbitron', sans-serif;\n  text-align: center;\n  font-size: 3em;\n  color: #fff;\n  text-shadow: 0 0 10px rgba(255, 255, 255, 0.4);\n  margin-bottom: 30px;\n  letter-spacing: 3px;\n}\n\nh2 {\n  font-family: 'Orbitron', sans-serif;\n  font-size: 1.8em;\n  color: #fff;\n  text-shadow: 0 0 8px rgba(255, 255, 255, 0.4);\n  margin-bottom: 20px;\n  text-align: center;\n  letter-spacing: 2px;\n}\n\nh3 {\n  font-family: 'Orbitron', sans-serif;\n  font-size: 1.3em;\n  color: #fff;\n  text-shadow: 0 0 6px rgba(255, 255, 255, 0.3);\n  margin-bottom: 15px;\n  text-align: center;\n  width: 100%;\n  letter-spacing: 1px;\n}\n\n#message-area {\n  text-align: center;\n  margin-bottom: 30px;\n  font-size: 1.2em;\n  color: #fff;\n  padding: 12px;\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 12px;\n  backdrop-filter: blur(5px);\n  max-width: 700px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n/* ---------------------- Glass Panels & Containers ---------------------- */\n.glass-panel {\n  background: rgba(255, 255, 255, 0.12);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.18);\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  border-radius: 24px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  padding: 32px 40px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  margin: 0 auto 32px auto;\n  max-width: 700px;\n}\n\n#controls-container {\n  display: flex;\n  justify-content: center;\n  gap: 40px;\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n}\n\n#placement-controls {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n#placement-controls button {\n  margin-bottom: 25px;\n}\n\n#placement-controls button:last-child {\n  margin-bottom: 0;\n}\n\n#top-panel-row {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 8px;\n  margin-bottom: 40px;\n  flex-wrap: wrap;\n}\n\n/* ---------------------- Modern Icon Buttons ---------------------- */\n.icon-btn,\nbutton,\n#sound-toggle,\n#reset-button,\n#placement-controls button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 14px;\n  background: rgba(255, 255, 255, 0.1);\n  color: #fff;\n  border: none;\n  border-radius: 16px;\n  padding: 14px 28px;\n  font-size: 1.1em;\n  font-weight: 500;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  cursor: pointer;\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  min-width: 180px;\n}\n\n.icon-btn:hover,\nbutton:hover,\n#sound-toggle:hover,\n#reset-button:hover,\n#placement-controls button:hover {\n  background: rgba(255, 255, 255, 0.2);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n  transform: translateY(-3px);\n}\n\n.icon-btn:active,\nbutton:active,\n#sound-toggle:active,\n#reset-button:active,\n#placement-controls button:active {\n  transform: translateY(1px);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n}\n\n.btn-icon {\n  width: 24px;\n  height: 24px;\n  border-radius: 6px;\n  object-fit: cover;\n}\n\n#sound-toggle {\n  background: rgba(0, 255, 255, 0.1);\n  border: 1px solid rgba(0, 255, 255, 0.3);\n}\n\n#sound-toggle:hover {\n  background: rgba(0, 255, 255, 0.2);\n}\n\n#reset-button {\n  background: rgba(255, 0, 85, 0.1);\n  border: 1px solid rgba(255, 0, 85, 0.3);\n}\n\n#reset-button:hover {\n  background: rgba(255, 0, 85, 0.2);\n}\n\n/* ---------------------- Game Layout ---------------------- */\n#game-container {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  gap: 40px;\n  padding: 40px;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 24px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n  backdrop-filter: blur(8px);\n  -webkit-backdrop-filter: blur(8px);\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.board-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.08);\n  padding: 24px;\n  border-radius: 20px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  transition: all 0.3s ease;\n}\n\n.board-container:hover {\n  box-shadow: 0 12px 36px rgba(0, 0, 0, 0.25);\n  transform: translateY(-5px);\n}\n\n/* ---------------------- Game Board & Cells ---------------------- */\n.game-board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  width: 400px;\n  height: 400px;\n  gap: 4px;\n  background: rgba(0, 0, 0, 0.3);\n  padding: 8px;\n  border-radius: 12px;\n  box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.4);\n}\n\n.cell {\n  background: rgba(255, 255, 255, 0.05);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 4px;\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.enemy-cell:hover {\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 0 15px rgba(255, 255, 255, 0.2);\n  transform: scale(1.05);\n  z-index: 1;\n}\n\n.cell.ship {\n  background: rgba(0, 255, 255, 0.1);\n  border-color: rgba(0, 255, 255, 0.3);\n  box-shadow: 0 0 8px rgba(0, 255, 255, 0.2);\n}\n\n.cell.miss {\n  background: rgba(255, 165, 0, 0.1);\n  border-color: rgba(255, 165, 0, 0.3);\n}\n\n.cell.miss::after {\n  content: '';\n  position: absolute;\n  width: 60%;\n  height: 60%;\n  background: url('/assets/images/pngwing.com.png') center/contain no-repeat;\n  top: 50%; left: 50%; transform: translate(-50%, -50%);\n  filter: drop-shadow(0 0 5px rgba(255, 165, 0, 0.5));\n}\n\n.cell.hit {\n  background: rgba(255, 0, 85, 0.15);\n  border-color: rgba(255, 0, 85, 0.4);\n  box-shadow: 0 0 12px rgba(255, 0, 85, 0.3);\n}\n\n.cell.hit::after {\n  content: '';\n  position: absolute;\n  width: 70%;\n  height: 70%;\n  background: url('/assets/images/bat-22.png') center/contain no-repeat;\n  top: 50%; left: 50%; transform: translate(-50%, -50%);\n  filter: drop-shadow(0 0 8px rgba(255, 0, 85, 0.5));\n}\n\n#computer-board .cell.ship {\n  background: rgba(255, 255, 255, 0.05);\n  border-color: rgba(255, 255, 255, 0.1);\n  box-shadow: none;\n}\n\n/* ---------------------- Placement Effects ---------------------- */\n.placement-phase #player-board .cell.hover-valid {\n  background: rgba(0, 255, 0, 0.2);\n  box-shadow: 0 0 12px rgba(0, 255, 0, 0.4);\n}\n\n.placement-phase #player-board .cell.hover-invalid {\n  background: rgba(255, 0, 0, 0.2);\n  box-shadow: 0 0 12px rgba(255, 0, 0, 0.4);\n}\n\n/* ---------------------- Ship Selection ---------------------- */\n#ship-list-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  background: rgba(255, 255, 255, 0.05);\n  padding: 24px;\n  border-radius: 20px;\n  margin-bottom: 30px;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n}\n\n#ship-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));\n  gap: 20px;\n  justify-items: center;\n  align-items: center;\n  width: 100%;\n  max-width: 900px;\n  margin: 0 auto;\n}\n\n#ship-list li {\n  background: rgba(255, 255, 255, 0.08);\n  padding: 16px 24px;\n  border-radius: 16px;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  font-size: 1.1em;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  width: 100%;\n  justify-content: center;\n}\n\n#ship-list li:hover {\n  background: rgba(255, 255, 255, 0.15);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\n  transform: translateY(-3px);\n}\n\n#ship-list li.selected {\n  background: rgba(255, 0, 85, 0.15);\n  box-shadow: 0 8px 24px rgba(255, 0, 85, 0.2);\n  border: 1px solid rgba(255, 0, 85, 0.3);\n}\n\n#ship-list li img {\n  width: 32px;\n  height: 32px;\n  border-radius: 8px;\n  object-fit: cover;\n}\n\n/* Responsive adjustments */\n@media (max-width: 600px) {\n  body {\n    padding: 20px 10px;\n  }\n  \n  #controls-container {\n    flex-direction: column;\n    gap: 20px;\n  }\n  \n  #placement-controls {\n    flex-direction: column;\n    gap: 12px;\n  }\n  \n  .game-board {\n    width: 320px;\n    height: 320px;\n  }\n  \n  #game-container {\n    padding: 20px;\n  }\n}\n\n@media (max-width: 900px) {\n  #top-panel-row {\n    flex-direction: column;\n    gap: 24px;\n    align-items: center;\n  }\n} "],sourceRoot:""}]);const C=p}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=r[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var r=t(72),a=t.n(r),o=t(825),i=t.n(o),A=t(659),l=t.n(A),s=t(56),c=t.n(s),d=t(540),p=t.n(d),u=t(113),g=t.n(u),b=t(971),C={};C.styleTagTransform=g(),C.setAttributes=c(),C.insert=l().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=p(),a()(b.A,C),b.A&&b.A.locals&&b.A.locals;const m=function(n){if(n<=0)throw new Error("Ship length must be positive");var e=0;return{length:n,getHits:function(){return e},hit:function(){e<n&&(e+=1)},isSunk:function(){return e>=n}}};function f(n){return function(n){if(Array.isArray(n))return E(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||function(n,e){if(n){if("string"==typeof n)return E(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?E(n,e):void 0}}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function E(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const h=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,e=Array(n).fill(null).map((function(){return Array(n).fill(null)})),t=[],r=[],a=new Set,o=function(n,e){return a.has("".concat(n,",").concat(e))},i=function(e,t){return e>=0&&e<n&&t>=0&&t<n};return{placeShip:function(r,a,o,A){if(A){if(a+r.length>n)throw new Error("Ship placement out of bounds")}else if(o+r.length>n)throw new Error("Ship placement out of bounds");for(var l=0;l<r.length;l++){var s=A?a+l:a,c=A?o:o+l;if(!i(s,c))throw new Error("Ship placement out of bounds");if(null!==e[s][c])throw new Error("Ship placement occupied")}for(var d=0;d<r.length;d++){var p=A?o:o+d;e[A?a+d:a][p]=r}t.push(r)},receiveAttack:function(n,t){if(!i(n,t))throw new Error("Attack coordinates out of bounds");if(o(n,t))throw new Error("Coordinate already attacked");!function(n,e){a.add("".concat(n,",").concat(e))}(n,t);var A=e[n][t];return A&&"function"==typeof A.hit&&"function"==typeof A.isSunk?(A.hit(),!0):(r.push([n,t]),!1)},getMissedAttacks:function(){return f(r)},allShipsSunk:function(){return t.length>0&&t.every((function(n){return n.isSunk()}))},getGrid:function(){return e.map((function(n){return f(n)}))},hasBeenAttacked:o,isValidCoordinate:i,clearBoard:function(){e=Array(n).fill(null).map((function(){return Array(n).fill(null)})),t=[],r=[],a=new Set}}};function x(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o,i,A=[],l=!0,s=!1;try{if(o=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;l=!1}else for(;!(l=(r=o.call(t)).done)&&(A.push(r.value),A.length!==e);l=!0);}catch(n){s=!0,a=n}finally{try{if(!l&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw a}}return A}}(n,e)||function(n,e){if(n){if("string"==typeof n)return B(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?B(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function B(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=Array(e);t<e;t++)r[t]=n[t];return r}const y=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"human",e=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:h)(),t=null,r=[],a=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10;t=new Set;for(var e=0;e<n;e++)for(var a=0;a<n;a++)t.add("".concat(e,",").concat(a));r=[]},o=function(n,e,a){[[-1,0],[1,0],[0,-1],[0,1]].forEach((function(a){var o=x(a,2),i=o[0],A=o[1],l=n+i,s=e+A,c="".concat(l,",").concat(s);l>=0&&l<10&&s>=0&&s<10&&t.has(c)&&(r.some((function(n){return n.row===l&&n.col===s}))||r.push({row:l,col:s}))})),r.sort((function(){return Math.random()-.5}))};return{getType:function(){return n},gameboard:e,attack:function(e,t,r){if("human"!==n)throw new Error("Only human players use attack() directly.");return r.receiveAttack(e,t)},computerIntelligentAttack:function(e){if("computer"!==n)throw new Error("Only computer players can use computerIntelligentAttack");var i,A;if(null===t&&a(),r.length>0){var l=r.shift();i=l.row,A=l.col}else{var s=function(){if(null===t&&a(),0===t.size)return console.error("Computer has no available moves left!"),{row:null,col:null};var n=Array.from(t),e=x(n[Math.floor(Math.random()*n.length)].split(",").map(Number),2);return{row:e[0],col:e[1]}}();if(null===s.row)return{row:null,col:null,hit:null};i=s.row,A=s.col}var c="".concat(i,",").concat(A);if(!t.has(c))return console.error("Computer chose an already attacked coord: ".concat(c,". Retrying random.")),{row:null,col:null,hit:null};t.delete(c);var d=e.receiveAttack(i,A);return d&&o(i,A),{row:i,col:A,hit:d}},initializeAvailableAttacks:a,addPotentialTargets:o}};var v,k,w,S,I,j,L,P,M,O,T,D,R,W,q=(v=document.getElementById("player-board"),k=document.getElementById("computer-board"),w=document.getElementById("computer-board-container"),S=document.getElementById("ship-list"),I=document.getElementById("rotate-button"),j=document.getElementById("random-placement"),L=document.getElementById("start-button"),P=document.getElementById("reset-button"),M=document.getElementById("sound-toggle"),O=document.getElementById("placement-controls"),T=document.getElementById("message-area"),D=document.getElementById("ship-list-container"),{renderBoard:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];e.innerHTML="";var a=n.getGrid(),o=a.length;e.style.gridTemplateColumns="repeat(".concat(o,", 1fr)");for(var i=0;i<o;i++)for(var A=0;A<o;A++){var l=document.createElement("div");l.classList.add("cell"),l.dataset.row=i,l.dataset.col=A;var s=a[i][A];!t&&r&&s instanceof m&&l.classList.add("ship"),n.hasBeenAttacked&&n.hasBeenAttacked(i,A)&&(s instanceof m?l.classList.add("hit"):l.classList.add("miss")),t&&l.classList.add("enemy-cell"),e.appendChild(l)}},updateCell:function(n,e,t,r){var a=("player"===r?v:k).querySelector(".cell[data-row='".concat(n,"'][data-col='").concat(e,"']"));if(a){a.classList.remove("hover-valid","hover-invalid");var o=t?"hit":"miss";a.classList.add(o),"computer"===r&&(a.classList.remove("enemy-cell"),a.style.cursor="default"),"player"===r&&(a.style.cursor="default")}},displayMessage:R=function(n){T&&(T.textContent=n)},renderShipList:function(n,e){S.innerHTML="",n.forEach((function(n,t){var r=document.createElement("li"),a=document.createElement("span");a.textContent="".concat(n.name," (").concat(n.length,")"),r.appendChild(a),r.dataset.shipIndex=t,r.dataset.shipLength=n.length,r.dataset.shipName=n.name,r.addEventListener("click",(function(a){var o=S.querySelector(".selected");o&&o.classList.remove("selected"),r.classList.add("selected"),e(n.length,n.name,t)})),S.appendChild(r)}))},updateRotationButton:function(n){I.textContent="Rotate Ship (".concat(n?"Vertical":"Horizontal",")")},highlightPlacement:function(n,e,t,r,a){W();for(var o=0;o<t;o++){var i=r?n+o:n,A=r?e:e+o;if(i>=0&&i<10&&A>=0&&A<10){var l=v.querySelector(".cell[data-row='".concat(i,"'][data-col='").concat(A,"']"));l&&l.classList.add(a?"hover-valid":"hover-invalid")}}},clearPlacementHighlights:W=function(){v.querySelectorAll(".hover-valid, .hover-invalid").forEach((function(n){return n.classList.remove("hover-valid","hover-invalid")}))},setPlacementPhaseUI:function(n){n?(document.body.classList.add("placement-phase"),O.style.display="block",D&&(D.style.display="block"),w.style.display="none",L.disabled=!0,P.style.display="none",v.style.cursor="crosshair"):(document.body.classList.remove("placement-phase"),O.style.display="none",D&&(D.style.display="none"),w.style.display="flex",L.disabled=!0,P.style.display="none",v.style.cursor="default",W())},enableStartButton:function(){L.disabled=!1},showGameOverUI:function(n){R("".concat(n," win! All enemy ships have been sunk.")),P.style.display="inline-block"},updateSoundButton:function(n){M&&(M.textContent="Sound: ".concat(n?"ON":"OFF"))},getRotateButton:function(){return I},getRandomPlacementButton:function(){return j},getStartButton:function(){return L},getResetButton:function(){return P},getSoundToggleButton:function(){return M},getPlayerBoardContainer:function(){return v},getComputerBoardContainer:function(){return k}});const z=q,U=function(){var n=new Audio;n.src="/assets/sounds/retro_explosion.mp3";var e=new Audio;e.src="/assets/sounds/water_splash.mp3";var t=new Audio;t.src="/assets/sounds/ship_sinking.mp3";var r=new Audio;r.src="https://assets.mixkit.co/sfx/preview/mixkit-medieval-show-fanfare-announcement-226.mp3",n.volume=.5,e.volume=.3,t.volume=.6,r.volume=.7;var a=!0;return{playHitSound:function(){a&&(n.currentTime=0,n.play().catch((function(n){return console.warn("Sound play failed:",n)})))},playMissSound:function(){a&&(e.currentTime=0,e.play().catch((function(n){return console.warn("Sound play failed:",n)})))},playSunkSound:function(){a&&(t.currentTime=0,t.play().catch((function(n){return console.warn("Sound play failed:",n)})))},playGameOverSound:function(){a&&(r.currentTime=0,r.play().catch((function(n){return console.warn("Sound play failed:",n)})))},toggleSound:function(){return(a=!a)||(n.pause(),e.pause(),t.pause(),r.pause()),a},isSoundEnabled:function(){return a}}}();function Y(n){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Y(n)}function G(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function X(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?G(Object(t),!0).forEach((function(e){H(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):G(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function H(n,e,t){return(e=function(n){var e=function(n){if("object"!=Y(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=Y(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==Y(e)?e:e+""}(e))in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}var N,Q,$,F=!1,Z=[],_=null,V=!1,K=[{name:"Carrier",length:5},{name:"Battleship",length:4},{name:"Cruiser",length:3},{name:"Submarine",length:3},{name:"Destroyer",length:2}];function J(){var n,e,t,r;F=!1,N=y("human"),Q=y("computer"),Z=K.map((function(n){return X(X({},n),{},{placed:!1})})),_=null,V=!1,en(Q.gameboard),z.renderBoard(N.gameboard,z.getPlayerBoardContainer(),!1),z.renderShipList(Z,tn),z.updateRotationButton(V),z.setPlacementPhaseUI(!0),n=z.getRotateButton(),e=z.getRandomPlacementButton(),t=z.getStartButton(),r=z.getPlayerBoardContainer(),n&&n.addEventListener("click",rn),e&&e.addEventListener("click",Cn),t&&t.addEventListener("click",ln),r&&(r.addEventListener("mouseover",an),r.addEventListener("mouseout",on),r.addEventListener("click",An)),z.displayMessage("Place your ships! Select a ship, use Rotate button, then click board.")}function nn(){gn(),cn(),J()}function en(n){K.forEach((function(e){for(var t=!1;!t;){var r=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),o=Math.random()<.5;try{n.placeShip(m(e.length),r,a,o),t=!0}catch(n){}}}))}function tn(n,e,t){Z[t].placed?z.displayMessage("".concat(e," already placed.")):(_={length:n,name:e,index:t},z.displayMessage("Placing ".concat(e,". Click on your board.")))}function rn(){V=!V,z.updateRotationButton(V)}function an(n){if(_&&n.target.classList.contains("cell")){var e=parseInt(n.target.dataset.row),t=parseInt(n.target.dataset.col),r=function(n,e,t,r,a){var o=n.getGrid();if(a){if(t+e>10)return!1}else if(r+e>10)return!1;for(var i=0;i<e;i++){var A=a?t+i:t,l=a?r:r+i;if(!n.isValidCoordinate(A,l)||null!==o[A][l])return!1}return!0}(N.gameboard,_.length,e,t,V);z.highlightPlacement(e,t,_.length,V,r)}}function on(){z.clearPlacementHighlights()}function An(n){if(_&&n.target.classList.contains("cell")){var e=parseInt(n.target.dataset.row),t=parseInt(n.target.dataset.col);try{N.gameboard.placeShip(m(_.length),e,t,V),Z[_.index].placed=!0,z.renderBoard(N.gameboard,z.getPlayerBoardContainer(),!1),z.renderShipList(Z,tn),_=null,z.clearPlacementHighlights(),z.displayMessage("Ship placed! Select the next ship."),Z.every((function(n){return n.placed}))&&(z.displayMessage("All ships placed! Press Start Game."),z.enableStartButton(),gn())}catch(n){console.warn("Placement failed:",n.message),z.displayMessage("Cannot place ship here: ".concat(n.message,". Try again."))}}}function ln(){Z.every((function(n){return n.placed}))?(gn(),z.setPlacementPhaseUI(!1),z.renderBoard(N.gameboard,z.getPlayerBoardContainer(),!1,!0),z.renderBoard(Q.gameboard,z.getComputerBoardContainer(),!0,!1),$=N,F=!1,z.displayMessage("Game started! Your turn. Attack the enemy board."),sn()):z.displayMessage("Please place all your ships first!")}function sn(){var n=z.getComputerBoardContainer();n&&n.addEventListener("click",dn)}function cn(){var n=z.getComputerBoardContainer();n&&n.removeEventListener("click",dn)}function dn(n){if(!F&&$===N&&n.target.classList.contains("enemy-cell")){var e=parseInt(n.target.dataset.row),t=parseInt(n.target.dataset.col);try{var r=N.attack(e,t,Q.gameboard);if(z.updateCell(e,t,r,"computer"),r){U.playHitSound();var a=Q.gameboard.getGrid()[e][t];a&&a.isSunk()&&(U.playSunkSound(),z.displayMessage("You sunk an enemy ship!"))}else U.playMissSound();Q.gameboard.allShipsSunk()?un(N):pn()}catch(n){console.warn("Attack failed:",n.message),z.displayMessage("Attack failed: ".concat(n.message,". Try again."))}}}function pn(){F||(($=$===N?Q:N)===N?(z.displayMessage("Your turn!"),sn()):F||$!==Q||(z.displayMessage("Computer's turn..."),cn(),setTimeout((function(){try{var n=Q.computerIntelligentAttack(N.gameboard),e=n.row,t=n.col,r=n.hit;if(null!==e&&null!==t)if(z.updateCell(e,t,r,"player"),r){U.playHitSound();var a=N.gameboard.getGrid()[e][t];a&&a.isSunk()&&(U.playSunkSound(),z.displayMessage("Computer sunk one of your ships!"))}else U.playMissSound();N.gameboard.allShipsSunk()?un(Q):pn()}catch(n){console.error("Computer attack error:",n),pn()}}),1e3)))}function un(n){F=!0,cn(),gn();var e="human"===n.getType()?"You":"Computer";U.playGameOverSound(),z.showGameOverUI(e)}function gn(){var n=z.getPlayerBoardContainer();n&&(n.removeEventListener("mouseover",an),n.removeEventListener("mouseout",on),n.removeEventListener("click",An))}function bn(){var n=U.toggleSound();z.updateSoundButton(n),console.log("Sound toggled:",n)}function Cn(){N.gameboard.clearBoard(),en(N.gameboard),Z.forEach((function(n){return n.placed=!0})),_=null,z.renderBoard(N.gameboard,z.getPlayerBoardContainer(),!1,!0),z.renderShipList(Z,tn),z.clearPlacementHighlights(),z.displayMessage("Ships placed randomly! Press Start Game."),z.enableStartButton(),gn()}document.addEventListener("DOMContentLoaded",(function(){J(),z.getRotateButton().addEventListener("click",rn),z.getRandomPlacementButton().addEventListener("click",Cn),z.getStartButton().addEventListener("click",ln),z.getResetButton().addEventListener("click",nn),z.getSoundToggleButton().addEventListener("click",bn),z.updateSoundButton(U.isSoundEnabled())}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,